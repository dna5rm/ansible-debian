---
- name: Include router task lists
  block:

    - name: Install network router packages
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      with_items:
        - bridge-utils
        - conntrack
        - frr
        - ifenslave
        - isc-dhcp-server
        - lldpd
        - python3-pip
        - radvd
        - snmp
        - snmpd
        - snmp-mibs-downloader
        - strongswan
        - strongswan-swanctl
        - vlan
        - watchdog
      notify: network services

    - name: Install network python packages
      ansible.builtin.pip:
        name: yq

    - name: vrf interface scripts
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: "/etc/network/{{ item }}"
        owner: root
        group: root
        mode: '0755'
      loop:
        - if-pre-up.d/vrf
        - if-post-down.d/vrf
        - if-up.d/vrf
      when:
        - router is defined
        - interface is search("vrf-id")

    - name: /etc/snmp/snmpd.conf
      ansible.builtin.copy:
        content: "{{ lookup('template', './snmpd_conf.j2') }}"
        dest: /etc/snmp/snmpd.conf
        owner: root
        group: root
        mode: '0600'
      notify: restart snmpd
      when: router.snmp is defined

    - name: /etc/strongswan.d/ancillary.conf
      ansible.builtin.copy:
        content: "{{ lookup('template', './strongswan_conf.j2') }}"
        dest: /etc/strongswan.d/ancillary.conf
        owner: root
        group: root
        mode: '0644'
      notify: reload strongswan
      when: interface|list is search("vti*")

    - name: /etc/ipsec.conf
      ansible.builtin.copy:
        content: "{{ lookup('template', './strongswan_ipsec.j2') }}"
        dest: /etc/ipsec.conf
        owner: root
        group: root
        mode: '0644'
      notify: reload strongswan
      when: interface|list is search("vti*")

    - name: /etc/ipsec.secrets
      ansible.builtin.copy:
        content: "{{ lookup('template', './strongswan_secrets.j2') }}"
        dest: /etc/ipsec.secrets
        owner: root
        group: root
        mode: '0600'
      notify: reload strongswan
      when: interface|list is search("vti*")

    - name: Update sysctl for vti interfaces
      ansible.posix.sysctl:
        name: net.ipv4.conf.{{ item }}.disable_policy
        value: '1'
        sysctl_set: yes
      loop: '{{ interface|list }}'
      when:
        - interface is defined
        - item is match("vti*")

    - name: /etc/frr/daemons
      ansible.builtin.copy:
        content: "{{ lookup('template', './frr_daemons.j2') }}"
        dest: /etc/frr/daemons
        owner: frr
        group: frr
        mode: '0400'
      notify: restart frr
      when: router.daemon is defined

    - name: ufw nat block in before.rules
      ansible.builtin.blockinfile:
        dest: /etc/ufw/before.rules
        insertbefore: "^# Don't delete these required lines"
        block: "{{ lookup('template', './ufw_nat.j2') }}"
      notify: restart ufw
      when: router.nat is defined

    - name: ufw default forward policy
      ansible.builtin.replace:
        dest: /etc/default/ufw
        regexp: '^DEFAULT_FORWARD_POLICY="DROP"'
        replace: 'DEFAULT_FORWARD_POLICY="ACCEPT"'
      notify: restart ufw
      when: router.nat is defined

    - name: ufw net/ipv4/ip_forward=1
      ansible.builtin.replace:
        dest: /etc/ufw/sysctl.conf
        regexp: '^#net/ipv4/ip_forward=1'
        replace: 'net/ipv4/ip_forward=1'
      notify: restart ufw
      when: router.nat is defined

    - name: ufw net/ipv6/default/forward=1
      ansible.builtin.replace:
        dest: /etc/ufw/sysctl.conf
        regexp: '^#net/ipv6/conf/default/forwarding=1'
        replace: 'net/ipv6/conf/default/forwarding=1'
      notify: restart ufw
      when: router.nat is defined

    - name: ufw net/ipv6/conf/all/forward=1
      ansible.builtin.replace:
        dest: /etc/ufw/sysctl.conf
        regexp: '^#net/ipv6/conf/all/forwarding=1'
        replace: 'net/ipv6/conf/all/forwarding=1'
      notify: restart ufw
      when: router.nat is defined

    - name: /etc/dhcp/dhcpd.conf
      ansible.builtin.copy:
        content: "{{ lookup('template', './dhcpd4_conf.j2') }}"
        dest: /etc/dhcp/dhcpd.conf
        owner: root
        group: root
        mode: '0644'
      notify: restart dhcpd
      when: router.dhcp is defined

    - name: /etc/default/isc-dhcp-server
      ansible.builtin.copy:
        content: "{{ lookup('template', './dhcpd_default.j2') }}"
        dest: /etc/default/isc-dhcp-server
        owner: root
        group: root
        mode: '0644'
      notify: restart dhcpd
      when: router.dhcp is defined

    - name: /usr/local/etc/oui.txt
      ansible.builtin.get_url:
        url: https://standards-oui.ieee.org/oui/oui.txt
        dest: /usr/local/etc/oui.txt
        owner: root
        group: root
        mode: '0755'
      when: router.dhcp is defined

    - name: /etc/radvd.conf
      ansible.builtin.copy:
        content: "{{ lookup('template', './radvd_conf.j2') }}"
        dest: /etc/radvd.conf
        owner: root
        group: root
        mode: '0644'
      notify: restart radvd
      when: router.dhcp is defined

  when: router is defined
